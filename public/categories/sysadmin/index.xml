<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sysadmin on svemagie</title>
    <link>http://svemagie.net/categories/sysadmin/</link>
    <description>Recent content in sysadmin on svemagie</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>mailto:svemagie@anche.no (svemagie)</managingEditor>
    <webMaster>mailto:svemagie@anche.no (svemagie)</webMaster>
    <lastBuildDate>Sat, 27 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="http://svemagie.net/categories/sysadmin/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>FreeBSD on RaspberryPi 4, updating from source</title>
      <link>http://svemagie.net/post/raspi-bsd-13stable/</link>
      <pubDate>Sat, 27 Feb 2021 00:00:00 +0000</pubDate>
      <author>mailto:svemagie@anche.no (svemagie)</author>
      <guid>http://svemagie.net/post/raspi-bsd-13stable/</guid>
      <description>A fully pandemics compatible microadventure: squeeze out everything possible an RaspberryPi 4B. On this episode: switching from 13-CURRENT to 13-RELEASE.
 fetch the sources: ```git clone -b releng/13 &amp;ndash;depth 1 https://git.freebsd.org/src.git src`` make buildworld &amp;amp;&amp;amp; make buildkernel KERNCONF=$YOURCONF halt attach USB-Serial-Interface Connector (black, white, green); screen /dev/ttyUSB(`*) 115200 boot into singleuser make installworld make installkernel KERNCONF=$YOURCONF mergemaster -Ui if booting from SD-Card (like me), mount /dev/mmcsd0s1 /mnt cp -r /boot/kernel /mnt/boot/kernel reboot  </description>
    </item>
    
    <item>
      <title>FreeBSD on RaspberryPi 4, MANIFEST error</title>
      <link>http://svemagie.net/post/raspi-bsd-manifest/</link>
      <pubDate>Fri, 05 Feb 2021 00:00:00 +0000</pubDate>
      <author>mailto:svemagie@anche.no (svemagie)</author>
      <guid>http://svemagie.net/post/raspi-bsd-manifest/</guid>
      <description>A pandemic compatible microadventure: squeeze out everything possible an RaspberryPi 4
 fetch 13-CURRENT https://download.freebsd.org/ftp/snapshots/arm64/aarch64/13.0-CURRENT/ &amp;amp; flash to SD boot up and ssh in (freebsd/freebsd, su - pw root) bsdinstall will throw error about MANIFEST, so change to sh shell export DISTRIBUTIONS=&amp;quot;kernel.txz base.txz&amp;quot; mkdir /usr/freebsd-dist export BSDINSTALL_DISTDIR=&amp;quot;/usr/freebsd-dist/&amp;quot; export BSDINSTALL_DISTSITE=&amp;quot;https://download.freebsd.org/ftp/snapshots/arm64/aarch64/13.0-CURRENT/&amp;quot; bsdinstall distfetch cd /usr/freebsd-dist fetch https://download.freebsd.org/ftp/snapshots/arm64/aarch64/13.0-CURRENT/MANIFEST bsdinstall  </description>
    </item>
    
    <item>
      <title>Pyenv - Installing Python on MacOS</title>
      <link>http://svemagie.net/post/pyenv-macos/</link>
      <pubDate>Wed, 27 Jan 2021 22:09:18 +0100</pubDate>
      <author>mailto:svemagie@anche.no (svemagie)</author>
      <guid>http://svemagie.net/post/pyenv-macos/</guid>
      <description>After fiddeling with different and various installments and versions of Python on MacOS, I stumbled over the article The right and wrong way to set Python 3 as default on a Mac - which works like a charm!
In short:
 brew install pyenv pyenv install 3.8.7 - the Python version you want to install pyenv global 3.8.7 - set it as preferred version make pyenv known to your login shell ($HOME/.</description>
    </item>
    
    <item>
      <title>GTD: Todoist &lt;-&gt; Taskwarrior</title>
      <link>http://svemagie.net/post/sync-todo/</link>
      <pubDate>Wed, 20 Jan 2021 00:00:00 +0000</pubDate>
      <author>mailto:svemagie@anche.no (svemagie)</author>
      <guid>http://svemagie.net/post/sync-todo/</guid>
      <description>Each of my legs stands firmly in one eco-system: most of my work is done on an Apple Powerhorse, but there are other beautiful Unixes, too. Some other things and most of my digital leisure happens on a Linux Laptop, the PineBook Pro. So bringing those worlds play along nicely is a task. This time: GTD (Getting things done): managing business and private tasks.
I work in Unix terminals most of the time, so my nifty taskmanager for the console is Taskwarrior.</description>
    </item>
    
    <item>
      <title>Connection test &amp; get all mail</title>
      <link>http://svemagie.net/post/getallmail/</link>
      <pubDate>Sun, 17 Jan 2021 00:00:00 +0000</pubDate>
      <author>mailto:svemagie@anche.no (svemagie)</author>
      <guid>http://svemagie.net/post/getallmail/</guid>
      <description>This is the script I call from crontab entry */10 * * * * $HOME/bin/fetchmail.sh.
First, we check if there&amp;rsquo;s an internet connection, then we fetch all mails via pop and imap.
#!/bin/bash ping -c 1 8.8.8.8 2&amp;gt;&amp;amp;1 &amp;gt;/dev/null if [ $? = 0 ] then # mpop mpop -a -q # kill mbsync if stuck killall mbsync &amp;amp;&amp;gt;/dev/null mbsync -a -q fi </description>
    </item>
    
    <item>
      <title>PinebookDiaries: installing ActivityWatch</title>
      <link>http://svemagie.net/post/pinebook-activitywatch/</link>
      <pubDate>Thu, 14 Jan 2021 17:30:19 +0100</pubDate>
      <author>mailto:svemagie@anche.no (svemagie)</author>
      <guid>http://svemagie.net/post/pinebook-activitywatch/</guid>
      <description>I consider myself as quite a bit of a data-junkie, lifelogger, selftracker- and hacker and I generate lots of data. Except on the PinebookPro - until now.
Here are the steps to get ActivityWatch built and installed on the PinebookPro (there is an AUR-bin, but for i386, no arm64):
QD (quick &amp;lsquo;n dirty) overview of the dependencies, build and install process: Use their doc section Installing from source. watch the dependencies (python3.</description>
    </item>
    
    <item>
      <title>PinebookDiaries: glueing Pandoc</title>
      <link>http://svemagie.net/post/pinebook-pandoc/</link>
      <pubDate>Wed, 13 Jan 2021 16:34:43 +0100</pubDate>
      <author>mailto:svemagie@anche.no (svemagie)</author>
      <guid>http://svemagie.net/post/pinebook-pandoc/</guid>
      <description>My trusted PinebookPro won&amp;rsquo;t install pandoc per default.
Pandoc is Haskell, and Haskell isn&amp;rsquo;t (binary-)available on Arch Linux / Manjaro based Distributions. But there is an debian-arm64 Version of it, so let&amp;rsquo;s install it. It&amp;rsquo;s a bit of an hack, so pacman and yay will complain later. I&amp;rsquo;ll figure out how to avoid it - or even better: how to do it correctly.
  install some tools and depencies:</description>
    </item>
    
  </channel>
</rss>
